name: CI

on:
  pull_request:
    types: ["opened", "reopened", "synchronize", "ready_for_review"]
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOMAIN: apps.silver.devops.gov.bc.ca

jobs:
  tests-java:
    name: Java CI
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        dir: [backend, oracle-api]
        include:
          - dir: backend
            token: SONAR_BACKEND
          - dir: oracle-api
            token: SONAR_ORACLE_API
    steps:
      - uses: actions/checkout@v4
      - uses: bcgov-nr/action-test-and-analyse-java@v0.1.0
        with:
          commands: mvn --no-transfer-progress clean compile verify package checkstyle:checkstyle -P all-tests
          dir: ${{ matrix.dir }}
          java-cache: maven
          java-distribution: temurin
          java-version: "17"
          sonar_args:
            -Dsonar.organization=bcgov-sonarcloud -Dsonar.projectKey=nr-spar_${{ matrix.dir }}
            -Dsonar.coverage.jacoco.xmlReportPaths=target/coverage-reports/merged-test-report/jacoco.xml
            -Dsonar.exclusions=**/config/**,*/dto/**,**/entity/**,**/exception/**,**/response/**,**/*$*Builder*,**/RestExceptionEndpoint.*,**/BackendStartApiApplication.*
          sonar_project_token: ${{ secrets[matrix.token] }}

  tests-javascript:
    name: JavaScript CI
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    env:
      VITE_NRSPARWEBAPP_VERSION: dev
    steps:
      - uses: actions/checkout@v4
      - uses: cypress-io/github-action@v6
        name: Cypress run
        env:
          CYPRESS_baseUrl: https://${{ github.event.repository.name }}-${{ github.event.number }}-frontend.${{ env.DOMAIN }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
          CYPRESS_USERNAME: LOAD-3-TEST
        with:
          config: chromeWebSecurity=false,pageLoadTimeout=10000
          working-directory: ./frontend
          browser: chrome

      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-chrome
          path: /home/runner/work/nr-spar/nr-spar/frontend/cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-chrome
          path: /home/runner/work/nr-spar/nr-spar/frontend/cypress/videos/

      - uses: bcgov-nr/action-test-and-analyse@v1.1.0
        with:
          node_version: "18.16.0"
          commands: |
            npm i
            npm run lint
            npm run coverage
          dir: frontend
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.cobertura.reportPaths=coverage/cobertura-coverage.xml
            -Dsonar.projectKey=nr-spar_frontend
            -Dsonar.sources=src/
            -Dsonar.exclusions=src/**/__test__/**/*
            -Dsonar.test.inclusions=src/**/__test__/**/*
          sonar_token: ${{ secrets.SONAR_FRONTEND }}

  # https://github.com/marketplace/actions/aqua-security-trivy
  trivy:
    name: Security Scan
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.12.0
        with:
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          scan-type: "fs"
          scanners: "vuln,secret,config"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

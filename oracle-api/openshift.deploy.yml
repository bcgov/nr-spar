apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: ${NAME}-${ZONE}
parameters:
  - name: NAME
    description: Module name
    value: nr-spar
  - name: COMPONENT
    description: Component name
    value: oracle-api
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: TAG
    description: Image tag; e.g. PR number, latest or prod
    required: true
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: ORG
    description: Organization name
    value: bcgov
  - name: DOMAIN
    value: apps.silver.devops.gov.bc.ca
  - name: CPU_REQUEST
    value: 100m
  - name: CPU_LIMIT
    value: 300m
  - name: MEMORY_REQUEST
    value: 300Mi
  - name: MEMORY_LIMIT
    value: 400Mi
  - name: ALLOWED_ORIGINS
    description: Sets all the allowed request origins
    value: "http://localhost:300*,https://*.apps.silver.devops.gov.bc.ca,https://*.nrs.gov.bc.ca"
  - name: MIN_REPLICAS
    description: The minimum amount of replicas for the horizontal pod autoscaler.
    value: "1"
  - name: MAX_REPLICAS
    description: The maximum amount of replicas for the horizontal pod autoscaler.
    value: "2"
  - name: OPENSEARCH_ENV
    description: Oracle API environment for OpenSearch. # One of: development, test, production
    required: false
    value: development
  - name: ORACLEDB_KEYSTORE
    description: Keystore location path
    value: /usr/share/service/jssecacerts
  - name: AWS_COGNITO_ISSUER_URI
    description: AWS Cognito JWT Server URI
    required: true
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      replicas: 1
      selector:
        matchLabels:
          deployment: ${NAME}-${ZONE}-${COMPONENT}
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: ${NAME}-${ZONE}
            deployment: ${NAME}-${ZONE}-${COMPONENT}
        spec:
          containers:
            - name: ${NAME}-${ZONE}
              image: ${REGISTRY}/${ORG}/${NAME}/${COMPONENT}:${TAG}
              imagePullPolicy: Always
              volumeMounts:
                - name: ${NAME}-${ZONE}-fluentbit-logs
                  mountPath: /logs
              env:
                - name: NR_SPAR_ORACLE_API_VERSION
                  value: ${REGISTRY}/${ORG}/${NAME}/${COMPONENT}:${TAG}
                - name: OPENSEARCH_ENV
                  value: ${OPENSEARCH_ENV}
                - name: ALLOWED_ORIGINS
                  value: ${ALLOWED_ORIGINS}
                - name: DATABASE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-host
                - name: DATABASE_PORT
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-port
                - name: SERVICE_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-service
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-password
                - name: ORACLEDB_KEYSTORE
                  value: ${ORACLEDB_KEYSTORE}
                - name: AWS_COGNITO_ISSUER_URI
                  value: ${AWS_COGNITO_ISSUER_URI}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              ports:
                - name: probe-port
                  containerPort: 8090
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /actuator/health
                  port: probe-port
              livenessProbe:
                httpGet:
                  path: /actuator/health
                  port: probe-port
              startupProbe:
                tcpSocket:
                  port: probe-port
                failureThreshold: 45
          volumes:
            - name: ${NAME}-${ZONE}-fluentbit-logs
              persistentVolumeClaim:
                claimName: ${NAME}-${ZONE}-fluentbit-logs
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      ports:
        - name: 8090-tcp
          protocol: TCP
          port: 80
          targetPort: 8090
      selector:
        deployment: ${NAME}-${ZONE}-${COMPONENT}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      host: ${NAME}-${ZONE}-${COMPONENT}.${DOMAIN}
      port:
        targetPort: 8090-tcp
      to:
        kind: Service
        name: ${NAME}-${ZONE}-${COMPONENT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      scaleTargetRef:
        apiVersion: apps.openshift.io/v1
        kind: Deployment
        name: ${NAME}-${ZONE}-${COMPONENT}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80

name: Deploy

on:
  workflow_call:
    inputs:
      ### Required
      release:
        description: 'PR number, test or prod.'
        required: true
        type: string
      
      repository:
        description: 'repository name.'
        required: false
        type: string
        default: "onroutebc"

      ### Typical / recommended
      autoscaling:
        description: 'Autoscaling enabled or not for the deployments'
        required: false
        type: boolean
        default: true
      environment:
        description: "Deployment environment - dev/test/prod"
        required: true
        type: string
        default: "dev"
      tag:
        description: 'Docker tag; e.g. PR number, tag, test or prod'
        required: false
        type: string
        default: ${{ github.event.number }}
      license:
        description: 'BC Gov LICENSE_PLATE of deployment env'
        required: false
        type: string
        default: "c28f0c"
      vault_role:
        description: "nonprod/prod"
        required: true
        type: string
        default: "nonprod"
      vault_zone:
        description: "secret zone"
        required: true
        type: string
        default: "dev"
      triggers:
        description: Paths to trigger a deploy; omit=always; e.g. ('backend/' 'frontend/')
        required: false
        type: string

      ### Usually a bad idea / not recommended
      directory:
        description: 'Chart directory.'
        default: 'charts/onroutebc'
        required: false
        type: string
      timeout-minutes:
        description: 'Timeout minutes'
        default: 10
        required: false
        type: number
      values:
        description: 'Values file.'
        default: 'values.yaml'
        required: false
        type: string
      params:
        description: 'Extra parameters to pass to helm upgrade'
        default: ''
        required: false
        type: string
  
  workflow_dispatch:
    inputs:
      ### Required
      release:
        description: 'release name'
        required: true
        type: string
        default: "demo"
      
      repository:
        description: 'repository name.'
        required: false
        type: string
        default: "onroutebc"

      ### Typical / recommended
      environment:
        description: "Deployment environment - dev/test/prod"
        required: true
        type: choice
        options: ["dev","test","prod"]
        default: "dev"
      tag:
        description: 'Docker tag; e.g. PR number, tag, test or prod'
        required: false
        type: string
        default: "latest"
      license:
        description: 'BC Gov LICENSE_PLATE of deployment env'
        required: false
        type: string
        default: "c28f0c"
      vault_role:
        description: "nonprod/prod"
        required: true
        type: choice
        options: ["nonprod","prod"]
      vault_zone:
        description: "secret zone"
        required: true
        type: string
        default: "dev"

      ### Usually a bad idea / not recommended
      directory:
        description: 'Chart directory.'
        default: 'charts/onroutebc'
        required: false
        type: string
      values:
        description: 'Values file.'
        default: 'values.yaml'
        required: false
        type: string
      params:
        description: 'Extra parameters to pass to helm upgrade'
        default: ''
        required: false
        type: string
jobs:
  init:
    name: Initialize
    # if: (! github.event.pull_request.draft)
    outputs:
      mod-tag: ${{ steps.mod-tag.outputs.mod-tag }}
    runs-on: ubuntu-22.04
    steps:
      - name: Get PR Number Mod 50
        id: mod-tag
        run: echo "mod-tag=$(( ${{ github.event.number }} % 50 ))" >> $GITHUB_OUTPUT

  validate:
    name: Validate PR
    needs: [init]
    # if: (! github.event.pull_request.draft)
    uses: bcgov/quickstart-openshift-helpers/.github/workflows/.pr-validate.yml@v0.4.0
    with:
      markdown_links: |
        - [Frontend](https://${{ github.event.repository.name }}-${{ needs.mod-tag.outputs.mod-tag }}-frontend.apps.silver.devops.gov.bc.ca/)
        - [Backend](https://${{ github.event.repository.name }}-${{ github.event.number }}-backend.apps.silver.devops.gov.bc.ca/actuator/health)
        - [Oracle-API](https://${{ github.event.repository.name }}-${{ github.event.number }}-oracle-api.apps.silver.devops.gov.bc.ca/actuator/health)

  results:
    name: Validate Results
    needs: [validate]
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Workflow completed successfully!"

name: PR

on:
  pull_request:

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: ${{ github.event.number }}
  cancel-in-progress: true

jobs:
  init:
    name: Initialize
    outputs:
      modded-tag: ${{ steps.mod-tag.outputs.modded-tag }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: Get PR Number Mod 50
        id: mod-tag
        run: echo "modded-tag=$(( ${{ github.event.number }} % 50 ))" >> $GITHUB_OUTPUT

      - name: OpenShift Init
        uses: bcgov-nr/action-deployer-openshift@v2.3.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: false
          parameters:
            -p ZONE=${{ github.event.number }}
            -p ORACLE_DB_USER=${{ secrets.DB_USER }}
            -p ORACLE_DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            -p FORESTCLIENTAPI_KEY='${{ secrets.FORESTCLIENTAPI_KEY }}'
            -p AWS_KINESIS_STREAM='${{ secrets.AWS_KINESIS_STREAM }}'
            -p AWS_KINESIS_ROLE_ARN='${{ secrets.AWS_KINESIS_ROLE_ARN }}'
            -p AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            -p AWS_ACCESS_KEY_SECRET='${{ secrets.AWS_ACCESS_KEY_SECRET }}'

  builds:
    name: Builds
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [database, backend, frontend, oracle-api]
    steps:
      - uses: actions/checkout@v4
      - uses: bcgov-nr/action-builder-ghcr@v2.0.2
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: latest
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ('${{ matrix.package }}/')

  deploys:
    name: Deploys
    needs: [builds]
    outputs:
      triggered: ${{ steps.trigger.outputs.triggered }}
    uses: ./.github/workflows/.deploy.yml
    with:
      triggers: ('backend/' 'common/' 'database/' 'frontend/' 'oracle-api/')

  tests:
    name: Tests
    if: needs.deploys.outputs.triggered == 'true'
    needs: [deploys]
    secrets: inherit
    uses: ./.github/workflows/.tests.yml

  results:
    name: PR Results
    if: always() && !failure()
    needs: [tests]
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Workflow completed successfully!"

apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: ${NAME}-${ZONE}
parameters:
  - name: NAME
    description: Module name
    value: nr-spar
  - name: COMPONENT
    description: Component name
    value: oracle-api
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: TAG
    description: Image tag; e.g. PR number, latest or prod
    required: false
    default: latest
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: ORG_NAME
    description: Organization name
    value: bcgov
  - name: DOMAIN
    value: apps.silver.devops.gov.bc.ca
  - name: CPU_REQUEST
    value: 100m
  - name: CPU_LIMIT
    value: 175m
  - name: MEMORY_REQUEST
    value: 300Mi
  - name: MEMORY_LIMIT
    value: 400Mi
  - name: NR_SPAR_ORACLE_API_VERSION
    description: Current service API release version
    required: true
  - name: ALLOWED_ORIGINS
    description: Sets all the allowed request origins
    value: "http://localhost:300*,https://*.apps.silver.devops.gov.bc.ca"
  - name: DATABASE_HOST
    description: Where the database is hosted
    value: nrcdb03.bcgov
  - name: DATABASE_PORT
    description: The port to be used for the connection to the database
    value: "1543"
  - name: SERVICE_NAME
    description: The database's name
    value: dbq01.nrs.bcgov
  - name: MIN_REPLICAS
    description: The minimum amount of replicas for the horizontal pod autoscaler.
    value: "1"
  - name: MAX_REPLICAS
    description: The maximum amount of replicas for the horizontal pod autoscaler.
    value: "2"
  - name: NR_SPAR_ORACLE_API_ENV_OPENSEARCH
    description: Oracle API environment for OpenSearch. # One of: development, test, production
    required: true
    value: development
  - name: ORACLEDB_KEYSTORE
    description: Keystore location path
    value: /usr/share/service/jssecacerts
  - name: AWS_COGNITO_ISSUER_URI
    description: AWS Cognito JWT Server URI
    required: true
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: ${REGISTRY}/${ORG_NAME}/${NAME}/${COMPONENT}:${TAG}
          referencePolicy:
            type: Local
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      replicas: 1
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: ${NAME}-${ZONE}-${COMPONENT}:latest
      selector:
        deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: ${NAME}-${ZONE}
            deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
        spec:
          containers:
            - image: ${NAME}-${ZONE}-${COMPONENT}:latest
              imagePullPolicy: Always
              name: ${NAME}
              volumeMounts:
                - name: ${NAME}-${ZONE}-fluentbit-logs
                  mountPath: /logs
              env:
                - name: NR_SPAR_ORACLE_API_VERSION
                  value: ${NR_SPAR_ORACLE_API_VERSION}
                - name: NR_SPAR_ORACLE_API_ENV_OPENSEARCH
                  value: ${NR_SPAR_ORACLE_API_ENV_OPENSEARCH}
                - name: ALLOWED_ORIGINS
                  value: ${ALLOWED_ORIGINS}
                - name: DATABASE_HOST
                  value: ${DATABASE_HOST}
                - name: DATABASE_PORT
                  value: ${DATABASE_PORT}
                - name: SERVICE_NAME
                  value: ${SERVICE_NAME}
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-password
                - name: ORACLEDB_KEYSTORE
                  value: ${ORACLEDB_KEYSTORE}
                - name: AWS_COGNITO_ISSUER_URI
                  value: ${AWS_COGNITO_ISSUER_URI}
              ports:
                - containerPort: 8090
                  protocol: TCP
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              readinessProbe:
                httpGet:
                  path: /actuator/health
                  port: 8090
                  scheme: HTTP
                initialDelaySeconds: 120
                periodSeconds: 15
                timeoutSeconds: 10
              livenessProbe:
                successThreshold: 1
                failureThreshold: 3
                httpGet:
                  path: /actuator/health
                  port: 8090
                  scheme: HTTP
                initialDelaySeconds: 120
                periodSeconds: 30
                timeoutSeconds: 10
          volumes:
            - name: ${NAME}-${ZONE}-fluentbit-logs
              persistentVolumeClaim:
                claimName: ${NAME}-${ZONE}-fluentbit-logs
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      ports:
        - name: 8090-tcp
          protocol: TCP
          port: 80
          targetPort: 8090
      selector:
        deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      host: ${NAME}-${ZONE}-${COMPONENT}.${DOMAIN}
      port:
        targetPort: 8090-tcp
      to:
        kind: Service
        name: ${NAME}-${ZONE}-${COMPONENT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      scaleTargetRef:
        apiVersion: apps.openshift.io/v1
        kind: DeploymentConfig
        name: ${NAME}-${ZONE}-${COMPONENT}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80

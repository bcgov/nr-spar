name: PR

on:
  pull_request:

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: ${{ github.event.number }}
  cancel-in-progress: true

jobs:
  init:
    name: Initialize
    outputs:
      modded-tag: ${{ steps.mod-tag.outputs.modded-tag }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: Get PR Number Mod 50
        id: mod-tag
        run: echo "modded-tag=$(( ${{ github.event.number }} % 50 ))" >> $GITHUB_OUTPUT

      - name: PR Greeting
        env:
          DOMAIN: apps.silver.devops.gov.bc.ca
          PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
          FRONT_END_PREFIX: ${{ github.event.repository.name }}-${{ steps.mod-tag.outputs.modded-tag }}
        uses: bcgov-nr/action-pr-description-add@v1.1.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---
            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [Frontend](https://${{ env.FRONT_END_PREFIX }}-frontend.${{ env.DOMAIN }}/)
            [Backend](https://${{ env.PREFIX }}-backend.${{ env.DOMAIN }}/actuator/health)
            [Oracle-API](https://${{ env.PREFIX }}-oracle-api.${{ env.DOMAIN }}/actuator/health)

            Once merged, code will be promoted and handed off to following workflow run.
            [Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge.yml)

      - name: OpenShift Init
        uses: bcgov-nr/action-deployer-openshift@v2.3.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: false
          parameters:
            -p ZONE=${{ github.event.number }}
            -p ORACLE_DB_USER=${{ secrets.DB_USER }}
            -p ORACLE_DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            -p FORESTCLIENTAPI_KEY='${{ secrets.FORESTCLIENTAPI_KEY }}'
            -p AWS_KINESIS_STREAM='${{ secrets.AWS_KINESIS_STREAM }}'
            -p AWS_KINESIS_ROLE_ARN='${{ secrets.AWS_KINESIS_ROLE_ARN }}'
            -p AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            -p AWS_ACCESS_KEY_SECRET='${{ secrets.AWS_ACCESS_KEY_SECRET }}'

  builds:
    name: Builds
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [database, backend, frontend, oracle-api]
    steps:
      - uses: actions/checkout@v4
      - uses: bcgov-nr/action-builder-ghcr@v2.0.2
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: latest
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ('${{ matrix.package }}/')

  deploys:
    name: Deploys
    needs: [builds, init]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    outputs:
      triggered: ${{ steps.trigger.outputs.triggered }}
    strategy:
      matrix:
        name: [database, backend, fluentbit, frontend, oracle-api]
        include:
          - name: database
            file: database/openshift.deploy.yml
            parameters:
              -p DB_PVC_SIZE=192Mi
            overwrite: false
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p BUILD=snapshot-${{ github.event.number }}
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
            verification_path: "actuator/health"
          - name: fluentbit
            file: common/openshift.fluentbit.yml
            overwrite: true
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p FAM_MODDED_ZONE=${{ needs.init.outputs.modded-tag }}
              -p VITE_SPAR_BUILD_VERSION=snapshot-${{ github.event.number }}
              -p VITE_NRSPARWEBAPP_VERSION=dev
              -p VITE_USER_POOLS_ID=${{ vars.VITE_USER_POOLS_ID }}
              -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
          - name: oracle-api
            file: oracle-api/openshift.deploy.yml
            overwrite: true
            parameters:
              -p NR_SPAR_ORACLE_API_VERSION=snapshot-${{ github.event.number }}
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
            triggers: ('oracle-api/')
            verification_path: "actuator/health"
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v2.3.0
        id: deploys
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          parameters:
            -p MIN_REPLICAS=1
            -p MAX_REPLICAS=2
            -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}
            ${{ matrix.parameters }}
          triggers: ${{ matrix.triggers || '("backend/" "common/" "database/" "frontend/" "oracle-api/")' }}
          verification_path: ${{ matrix.verification_path}}
      - id: trigger
        if: matrix.name == 'frontend'
        run: echo "triggered=${{ steps.deploys.outputs.triggered }}" >> $GITHUB_OUTPUT

  tests:
    name: Tests
    if: needs.deploys.outputs.triggered == 'true'
    needs: [deploys]
    secrets: inherit
    uses: ./.github/workflows/.tests.yml

  results:
    name: PR Results
    if: always() && !failure()
    needs: [tests]
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Workflow completed successfully!"

name: .Deploys

on:
  workflow_call:
    inputs:
      ### Required
      # Nothing! Only `secrets: inherit` is required

      ### Typical / recommended
      environment:
        description: GitHub/OpenShift environment; usually PR number, test or prod
        default: ''
        required: false
        type: string
      tag:
        description: Container tag; usually PR number
        default: ${{ github.event.number }}
        required: false
        type: string
      target:
        description: Deployment target; usually PR number, test or prod
        default: ${{ github.event.number }}
        required: false
        type: string

    outputs:
      run_tests:
        description: Run Cypress tests if the core apps have changed (excludes sync)
        value: ${{ jobs.init.outputs.triggers_core }}

jobs:
  init:
    name: Deploy (init)
    environment: ${{ inputs.environment }}
    outputs:
      mod-tag: ${{ steps.mod-tag.outputs.mod-tag }}
      triggers_core: ${{ steps.triggers_core.outputs.triggered }}
      triggers_sync: ${{ steps.triggers_sync.outputs.triggered }}
    runs-on: ubuntu-22.04
    steps:
      # Check triggers (omitted or matched)
      - uses: bcgov-nr/action-diff-triggers@v0.2.0
        id: triggers_core
        with:
          triggers: ('backend/' 'common/' 'database/' 'frontend/' 'oracle-api/')

      - uses: bcgov-nr/action-diff-triggers@v0.2.0
        id: triggers_sync
        with:
          triggers: ('common/' 'sync/')

      - name: Get PR Number Mod 50
        if: github.event_name == 'pull_request'
        id: mod-tag
        run: echo "mod-tag=$(( ${{ inputs.target }} % 50 ))" >> $GITHUB_OUTPUT

      - name: OpenShift Init
        if: github.event_name != 'pull_request' || steps.triggers_core.outputs.triggered == 'true' || steps.triggers_sync.outputs == 'true'
        uses: bcgov-nr/action-deployer-openshift@v3.0.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: true
          parameters:
            -p ZONE=${{ inputs.target }}
            -p FORESTCLIENTAPI_KEY='${{ secrets.FORESTCLIENTAPI_KEY }}'
            -p ORACLE_PASSWORD='${{ secrets.ORACLE_PASSWORD }}'
            -p ORACLE_SERVICE='${{ vars.ORACLE_SERVICE }}'
            -p ORACLE_USER='${{ vars.ORACLE_USER }}'
            -p ORACLE_SYNC_USER='${{ vars.ORACLE_SYNC_USER }}'
            -p ORACLE_SYNC_PASSWORD='${{ secrets.ORACLE_SYNC_PASSWORD }}'

      - name: Database
        if: github.event_name != 'pull_request' || steps.triggers_core.outputs.triggered == 'true' || steps.triggers_sync.outputs == 'true'
        uses: bcgov-nr/action-deployer-openshift@v3.0.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: database/openshift.deploy.yml
          overwrite: false
          parameters:
            -p TAG=${{ inputs.tag }}
            -p ZONE=${{ inputs.target }}
            -p DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            ${{ github.event_name == 'pull_request' && '-p DB_PVC_SIZE=192Mi' || '' }}

  deploy:
    name: Deploy
    if: github.event_name != 'pull_request' || needs.init.outputs.triggers_core == 'true'
    environment: ${{ inputs.environment }}
    needs: [init]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    strategy:
      matrix:
        name: [backend, frontend, oracle-api]
        include:
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.ca-central-1.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
            verification_path: "health"
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p FAM_MODDED_ZONE=${{ github.event_name == 'pull_request' && needs.init.outputs.mod-tag || inputs.target }}
              -p VITE_SPAR_BUILD_VERSION=snapshot-${{ inputs.target || github.event.number }}
              -p VITE_USER_POOLS_ID=${{ vars.VITE_USER_POOLS_ID }}
              -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
          - name: oracle-api
            file: oracle-api/openshift.deploy.yml
            overwrite: true
            parameters:
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.ca-central-1.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
            verification_path: "actuator/health"

    steps:
      - uses: bcgov-nr/action-deployer-openshift@v3.0.0
        id: deploys
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: ${{ matrix.oc_version }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p TAG=${{ inputs.tag }}
            -p ZONE=${{ inputs.target }}
            ${{ github.event_name == 'pull_request' && '-p MIN_REPLICAS=1' || '' }}
            ${{ github.event_name == 'pull_request' && '-p MAX_REPLICAS=2' || '' }}
            ${{ matrix.parameters }}
          verification_path: ${{ matrix.verification_path }}
          verification_retry_attempts: 5
          verification_retry_seconds: 20

  # ETL testing will only run on Pull Requests if the sync/ directory is modified
  etl:
    name: ETL Sync
    if: github.event_name != 'pull_request' || needs.init.outputs.triggers_sync == 'true'
    needs: [init]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy (sync)
        uses: bcgov-nr/action-deployer-openshift@v3.0.0
        with:
          file: sync/openshift.deploy.yml
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters:
            -p TAG=${{ inputs.tag }}
            -p ZONE=${{ inputs.target }}
            -p TEST_MODE=true

      - name: Override OpenShift version
        if: github.event_name == 'pull_request'
        env:
          OC: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-4.13/openshift-client-linux.tar.gz
        run: |
          # Download and extract with retry, continuing on error
          (wget ${{ env.OC }} -qcO - | tar -xzvf - oc)|| !! || true
          oc version
        working-directory: /usr/local/bin/

      - name: ETL Sync
        if: github.event_name == 'pull_request'
        run: |
          # Run and verify job

          # Login
          oc login --token=${{ secrets.oc_token }} --server=${{ vars.oc_server }}
          oc project ${{ secrets.oc_namespace }} #Safeguard!

          # Exit on errors or unset variables
          set -eu

          # Create job
          CRONJOB=nr-spar-${{ inputs.target }}-sync
          RUN_JOB=${CRONJOB}--$(date +"%Y-%m-%d--%H-%M-%S")
          oc create job ${RUN_JOB} --from=cronjob/${CRONJOB}

          # Follow
          oc wait --for=condition=ready pod --selector=job-name=${RUN_JOB} --timeout=1m
          oc logs -l job-name=${RUN_JOB} --tail=50 --follow

          # Verify successful completion
          oc wait --for jsonpath='{.status.phase}'=Succeeded pod --selector=job-name=${RUN_JOB} --timeout=1m
          echo "Job successful!"

name: .Deploys

on:
  workflow_call:
    inputs:
      ### Required
      # Nothing! Only `secrets: inherit` is required

      ### Typical / recommended
      environment:
        description: GitHub/OpenShift environment; usually PR number, test or prod
        default: ''
        required: false
        type: string
      tag:
        description: Container tag; usually PR number
        default: ${{ github.event.number }}
        required: false
        type: string
      target:
        description: Deployment target; usually PR number, test or prod
        default: ${{ github.event.number }}
        required: false
        type: string
      triggers:
        description: Deployment trigger; omit = build; e.g. ('backend/' 'frontend/')
        required: false
        type: string
      ### Usually a bad idea / not recommended
      timeout-minutes:
        description: 'Timeout minutes'
        default: 10
        required: false
        type: number

    outputs:
      triggered:
        description: 'Has a deployment has been triggered?'
        value: ${{ jobs.deploy.outputs.triggered }}

jobs:
  init:
    name: Deploy (init)
    environment: ${{ inputs.environment }}
    outputs:
      mod-tag: ${{ steps.mod-tag.outputs.mod-tag }}
      triggered: ${{ steps.triggers.outputs.triggered }}
    runs-on: ubuntu-22.04
    steps:
      # Check triggers (omitted or matched)
      - uses: bcgov-nr/action-diff-triggers@v0.2.0
        id: triggers
        with:
          triggers: ${{ inputs.triggers }}

      - if: steps.triggers.outputs.triggered == 'false'
        run: echo "No deployment required/triggered!"

      - name: Get PR Number Mod 50
        if: github.event_name == 'pull_request' && steps.triggers.outputs.triggered == 'true'
        id: mod-tag
        run: echo "mod-tag=$(( ${{ inputs.target }} % 50 ))" >> $GITHUB_OUTPUT

      - name: OpenShift Init
        if: github.event_name != 'pull_request' || steps.triggers.outputs.triggered == 'true'
        uses: bcgov-nr/action-deployer-openshift@v3.0.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: true
          parameters:
            -p ZONE=${{ inputs.target }}
            -p FORESTCLIENTAPI_KEY='${{ secrets.FORESTCLIENTAPI_KEY }}'
            -p ORACLE_PASSWORD='${{ secrets.ORACLE_PASSWORD }}'
            -p ORACLE_SERVICE='${{ vars.ORACLE_SERVICE }}'
            -p ORACLE_USER='${{ vars.ORACLE_USER }}'
            -p ORACLE_SYNC_USER='${{ vars.ORACLE_SYNC_USER }}'
            -p ORACLE_SYNC_PASSWORD='${{ secrets.ORACLE_SYNC_PASSWORD }}'
            -p ORACLE_CERT_SECRET='${{ secrets.ORACLE_CERT_SECRET }}'

  database:
    name: Deploy (database)
    environment: ${{ inputs.environment }}
    if: github.event_name != 'pull_request' || needs.init.outputs.triggered == 'true'
    needs: [init]
    runs-on: ubuntu-22.04
    steps:
      - name: Database
        uses: bcgov-nr/action-deployer-openshift@v3.0.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: database/openshift.deploy.yml
          overwrite: false
          parameters:
            -p TAG=${{ inputs.tag }}
            -p ZONE=${{ inputs.target }}
            -p DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            ${{ github.event_name == 'pull_request' && '-p DB_PVC_SIZE=192Mi' || '' }}

  deploy:
    name: Deploy
    environment: ${{ inputs.environment }}
    if: github.event_name != 'pull_request' || needs.init.outputs.triggered == 'true'
    needs: [database, init]
    outputs:
      triggered: ${{ steps.trigger.outputs.triggered }}
    runs-on: ubuntu-22.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    strategy:
      matrix:
        name: [backend, frontend, oracle-api, sync]
        include:
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.ca-central-1.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
            verification_path: "health"
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p FAM_MODDED_ZONE=${{ github.event_name == 'pull_request' && needs.init.outputs.mod-tag || inputs.target }}
              -p VITE_SPAR_BUILD_VERSION=snapshot-${{ inputs.target || github.event.number }}
              -p VITE_USER_POOLS_ID=${{ vars.VITE_USER_POOLS_ID }}
              -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
          - name: oracle-api
            file: oracle-api/openshift.deploy.yml
            overwrite: true
            parameters:
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.ca-central-1.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
            verification_path: "actuator/health"
          - name: sync
            file: sync/openshift.deploy.yml
            overwrite: true

    steps:
      - uses: bcgov-nr/action-deployer-openshift@v3.0.0
        id: deploys
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          parameters:
            -p TAG=${{ inputs.tag }}
            -p ZONE=${{ inputs.target }}
            ${{ github.event_name == 'pull_request' && '-p MIN_REPLICAS=1' || '' }}
            ${{ github.event_name == 'pull_request' && '-p MAX_REPLICAS=2' || '' }}
            ${{ matrix.parameters }}
          post_rollout: ${{ matrix.post_rollout }}
          triggers: ${{ inputs.triggers }}
          verification_path: ${{ matrix.verification_path }}
          verification_retry_attempts: "5"
          verification_retry_seconds: "20"
      - id: trigger
        run: echo "triggered=${{ steps.deploys.outputs.triggered }}" >> $GITHUB_OUTPUT

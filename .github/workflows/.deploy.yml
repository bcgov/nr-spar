name: .Deploys

on:
  workflow_call:
    inputs:
      ### Required
      target:
        description: Deployment target; usually PR number, test or prod
        required: false
        type: string

      ### Typical / recommended
      environment:
        description: Environment name; omit for PRs
        required: false
        type: string
      tag:
        description: Container tag; usually PR number
        required: false
        type: string
      test:
        description: Run Cypress tests after deployment?  [true|false]
        required: false
        type: string
      triggers:
        description: Paths to trigger a deploy; omit=always; e.g. ('backend/' 'frontend/')
        required: false
        type: string

      ### Usually a bad idea / not recommended
      timeout-minutes:
        description: 'Timeout minutes'
        default: 10
        required: false
        type: number

    outputs:
      triggered:
        description: 'Has a deployment has been triggered?'
        value: ${{ jobs.deploys.outputs.triggered }}

jobs:
  init:
    name: Initialize
    environment: ${{ inputs.environment }}
    outputs:
      modded-tag: ${{ steps.mod-tag.outputs.modded-tag }}
      pr: ${{ steps.pr.outputs.pr }}
    permissions:
      pull-requests: write
    runs-on: ubuntu-22.04
    steps:
      - name: Get PR Number Mod 50
        if: github.event_name == 'pull_request'
        id: mod-tag
        run: echo "modded-tag=$(( ${{ inputs.target || github.event.number }} % 50 ))" >> $GITHUB_OUTPUT

      # Get PR number for squash merges to main
      - name: PR Number
        id: pr
        uses: bcgov-nr/action-get-pr@v0.0.1

      - name: OpenShift Init
        uses: bcgov-nr/action-deployer-openshift@v2.3.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: false
          parameters:
            -p ZONE=${{ inputs.target || github.event.number }}
            -p ORACLE_DB_USER=${{ secrets.DB_USER }}
            -p ORACLE_DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            -p FORESTCLIENTAPI_KEY='${{ secrets.FORESTCLIENTAPI_KEY }}'
            -p AWS_KINESIS_STREAM='${{ secrets.AWS_KINESIS_STREAM }}'
            -p AWS_KINESIS_ROLE_ARN='${{ secrets.AWS_KINESIS_ROLE_ARN }}'
            -p AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            -p AWS_ACCESS_KEY_SECRET='${{ secrets.AWS_ACCESS_KEY_SECRET }}'

  deploys:
    name: Deploys
    environment: ${{ inputs.environment }}
    needs: [init]
    outputs:
      triggered: ${{ steps.trigger.outputs.triggered }}
    runs-on: ubuntu-22.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    strategy:
      matrix:
        name: [database, backend, fluentbit, frontend, oracle-api]
        include:
          - name: database
            file: database/openshift.deploy.yml
            parameters:
              ${{ github.event_name != 'pull_request' || '-p DB_PVC_SIZE=192Mi' }}
            overwrite: false
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p BUILD=snapshot-${{ inputs.target || github.event.number }}
              -p NR_SPAR_BACKEND_ENV_OPENSEARCH=${{ inputs.target || github.event.number }}
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
              ${{ inputs.target != 'prod' && '' || '-p ORACLE_SERVER_URL=https://nr-spar-prod-oracle-api.apps.silver.devops.gov.bc.ca' }}
            verification_path: "actuator/health"
          - name: fluentbit
            file: common/openshift.fluentbit.yml
            overwrite: true
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p FAM_MODDED_ZONE=${{ inputs.target || needs.init.outputs.modded-tag }}
              -p VITE_SPAR_BUILD_VERSION=snapshot-${{ inputs.target || github.event.number }}
              -p VITE_NRSPARWEBAPP_VERSION=${{ inputs.target || github.event.number }}
              -p VITE_USER_POOLS_ID=${{ vars.VITE_USER_POOLS_ID }}
              -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
              ${{ inputs.target != 'prod' && '' || '-p VITE_ORACLE_SERVER_URL=https://nr-spar-prod-oracle-api.apps.silver.devops.gov.bc.ca' }}
          - name: oracle-api
            file: oracle-api/openshift.deploy.yml
            overwrite: true
            parameters:
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
              -p NR_SPAR_ORACLE_API_VERSION=snapshot-${{ inputs.target || github.event.number }}
              -p NR_SPAR_ORACLE_API_ENV_OPENSEARCH=${{ inputs.target || github.event.number }}
            triggers: ('oracle-api/')
            verification_path: "actuator/health"
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v2.3.0
        id: deploys
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          parameters:
            ${{ github.event_name != 'pull_request' || '-p MIN_REPLICAS=1' }}
            ${{ github.event_name != 'pull_request' || '-p MAX_REPLICAS=2' }}
            -p TAG=${{ inputs.tag || needs.init.outputs.pr }}
            -p ZONE=${{ inputs.target || github.event.number }}
            ${{ matrix.parameters }}
          triggers: ${{ matrix.triggers }}
          verification_path: ${{ matrix.verification_path }}

      - id: trigger
        run: echo "triggered=${{ steps.deploys.outputs.triggered }}" >> $GITHUB_OUTPUT

  tests:
    name: Tests
    if: inputs.test == 'true' && needs.deploys.outputs.triggered == 'true'
    needs: [deploys]
    secrets: inherit
    uses: ./.github/workflows/.tests.yml

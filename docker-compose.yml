version: '3.9'

x-db-vars: &db-vars
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: default
  POSTGRES_DB: postgres

x-frontend: &frontend
  depends_on:
    backend:
      condition: service_started
  environment:
    VITE_SERVER_URL: http://localhost:8090
    VITE_ORACLE_SERVER_URL: https://nr-spar-test-oracle-api.apps.silver.devops.gov.bc.ca
    LOG_LEVEL: debug
    VITE_USER_POOLS_ID: ca-central-1_t2HSZBHur
    VITE_USER_POOLS_WEB_CLIENT_ID: 6jmscjfesregki1pvng2oiopc3
    VITE_ZONE: TEST
  healthcheck:
    test: timeout 10s bash -c 'true > /dev/tcp/127.0.0.1/3000'
    interval: 10s
    timeout: 10s
    retries: 5
    start_period: 10s

services:
  database:
    container_name: database
    environment:
      <<: *db-vars
    volumes: ["/pgdata"]
    ports: ["5432:5432"]
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
    image: postgis/postgis:13-master

  backend:
    container_name: backend
    depends_on:
      database:
        condition: service_started
    environment:
      ALLOWED_ORIGINS: "http://localhost:*"
      FORESTCLIENTAPI_ADDRESS: https://nr-forest-client-api-prod.api.gov.bc.ca/api
      FORESTCLIENTAPI_KEY: "${FORESTCLIENTAPI_KEY}"
      ORACLE_SERVER_URL: https://nr-spar-test-oracle-api.apps.silver.devops.gov.bc.ca
      POSTGRES_HOST: database
      AWS_COGNITO_ISSUER_URI: "https://cognito-idp.ca-central-1.amazonaws.com/ca-central-1_t2HSZBHur"
      <<: *db-vars
    ports: ["8090:8090", "5005:5005"]
    image: maven:3.9.6-eclipse-temurin-17
    entrypoint: sh -c './encora-cert.sh'
    working_dir: /app
    volumes:
      - ./backend:/app
      - $HOME/zscaler-certs:/certs
    healthcheck:
      test: curl -f http://localhost:8090/actuator/health | grep '"status":"UP"'
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    container_name: frontend
    image: node:18-bullseye-slim
    ports: ["3000:3000"]
    entrypoint: sh -c "npm i --no-update-notifier && npm run start"
    user: root
    volumes: ["./frontend:/app"]
    working_dir: /app
    <<: *frontend

  caddy:
    container_name: caddy
    profiles: ["caddy"]
    build: ./frontend
    ports: ["3005:3000"]
    volumes: ["./frontend/Caddyfile:/etc/caddy/Caddyfile"]
    <<: *frontend

  # Cypress image tag must match what's in frontend/package.json
  cypress:
    container_name: cypress
    depends_on:
      frontend:
        condition: service_started
    entrypoint: sh -c "npm run cy:run --no-update-notifier"
    environment:
      CYPRESS_baseUrl: http://frontend:3000
      CYPRESS_USERNAME: LOAD-3-TEST
      CYPRESS_PASSWORD: ${CYPRESS_PASSWORD}
    image: cypress/included:12.17.4
    profiles: ["cypress"]
    user: root
    volumes: ["./frontend:/app"]
    working_dir: /app

  oracle:
    container_name: oracle
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SERVICE_NAME: ${SERVICE_NAME}
      SERVER_PORT: "8091"
      ORACLEDB_KEYSTORE: /app/jssecacerts
      ORACLEDB_SECRET: changeit
      AWS_COGNITO_ISSUER_URI: "https://cognito-idp.ca-central-1.amazonaws.com/ca-central-1_t2HSZBHur"
    profiles: ["oracle"]
    network_mode: host
    image: maven:3.9.6-eclipse-temurin-17
    entrypoint: sh -c './startup.sh && mvn -ntp spring-boot:run -Dspring-boot.run.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5006"'
    working_dir: /app
    volumes: ["./oracle-api:/app"]
    healthcheck:
      test: curl -f http://localhost:8091/actuator/health | grep '"status":"UP"'
      interval: 5s
      timeout: 5s
      retries: 5

name: PR

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # pr-greeting:
  #   name: PR Greeting
  #   env:
  #     DOMAIN: apps.silver.devops.gov.bc.ca
  #     PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
  #   runs-on: ubuntu-22.04
  #   permissions:
  #     pull-requests: write
  #   steps:
  #     - name: PR Greeting
  #       uses: bcgov-nr/action-pr-description-add@v0.0.2
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         add_markdown: |
  #           ---
  #           Thanks for the PR!

  #           Any successful deployments (not always required) will be available below.
  #           [Backend](https://${{ env.PREFIX }}-backend.${{ env.DOMAIN }}/) available
  #           [Frontend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}/) available

  #           Once merged, code will be promoted and handed off to following workflow run.
  #           [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

  # builds:
  #   name: Builds
  #   runs-on: ubuntu-22.04
  #   permissions:
  #     packages: write
  #   strategy:
  #     matrix:
  #       package: [backend, database, frontend, oracle-api]
  #       include:
  #         - package: backend
  #           triggers: ('backend/')
  #         - package: database
  #           triggers: ('database/')
  #         - package: frontend
  #           triggers: ('frontend/')
  #         - package: oracle-api
  #           triggers: ('oracle-api/')
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: bcgov-nr/action-builder-ghcr@v1.1.0
  #       with:
  #         package: ${{ matrix.package }}
  #         tag: ${{ github.event.number }}
  #         tag_fallback: test
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         triggers: ${{ matrix.triggers }}

  deploys:
    name: Deploys
    # needs:
    #   - builds
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [init, database, backend, frontend]
        include:
          - name: init
            file: common/openshift.init.yml
            overwrite: false
          - name: database
            file: database/openshift.deploy.yml
            parameters: -p DB_PVC_SIZE=128Mi
            overwrite: false
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=1 -p BUILD=snapshot-${{ github.event.number }}
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p REACT_APP_SPAR_BUILD_VERSION=snapshot-${{ github.event.number }}
              -p REACT_APP_SERVER_URL=https://nr-spar-backend-test-backend.apps.silver.devops.gov.bc.ca
              -p REACT_APP_NRSPARWEBAPP_VERSION=dev
              -p REACT_APP_KC_URL=https://test.loginproxy.gov.bc.ca/auth
              -p REACT_APP_KC_REALM=standard
              -p REACT_APP_KC_CLIENT_ID=seed-planning-test-4296
              -p REACT_APP_ENABLE_MOCK_SERVER=true
              -p MIN_REPLICAS=1 -p MAX_REPLICAS=1
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          verification_path: "actuator/health"
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:${{ github.event.number }}
            ${{ matrix.parameters }}

  deploys-api:
    name: Deploys - API
    # needs:
    #   - builds
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: oracle-api/openshift.deploy.yml
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: "actuator/health"
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/oracle-api:${{ github.event.number }}
            -p NR_SPAR_ORACLE_API_VERSION=snapshot-${{ github.event.number }}
            -p ALLOWED_ORIGINS=${{ vars.ALLOWED_ORIGINS }}
            -p KEYCLOAK_REALM_URL=${{ vars.KEYCLOAK_REALM_URL }}
            -p DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            -p DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            -p SERVICE_NAME=${{ secrets.SERVICE_NAME }}
            -p DATABASE_USER=${{ secrets.DATABASE_USER }}
            -p DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}

  # pr-validation:
  #   name: Label Validation (Only PR)
  #   runs-on: ubuntu-22.04
  #   if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
  #   permissions:
  #     contents: read
  #     pull-requests: write
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Pull request size and stability labels
  #       uses: actions/labeler@v4
  #       continue-on-error: true
  #       with:
  #         repo-token: "${{ secrets.GITHUB_TOKEN }}"

  #     - name: Conventional Label
  #       uses: bcoe/conventional-release-labels@v1
  #       continue-on-error: true
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         ignored_types: '["chore","pr"]'
  #         type_labels: '{"feat": "feature", "fix": "fix", "bug": "fix", "doc": "documentation", "ci": "ci", "chore": "chore", "breaking": "breaking", "BREAKING CHANGE": "breaking"}'

  #     - name: Checkout branch
  #       uses: actions/checkout@v3
  #       with:
  #         ref: refs/heads/${{ github.head_ref }}

  #     - name: Conventional Changelog Update
  #       continue-on-error: true
  #       uses: TriPSs/conventional-changelog-action@v3
  #       id: changelog
  #       with:
  #         github-token: ${{ github.token }}
  #         output-file: "CHANGELOG.md"
  #         skip-version-file: "true"
  #         skip-commit: "true"
  #         git-push: "false"
  #         git-branch: refs/heads/${{ github.head_ref }}

  #     - name: Checkout pr
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.ref }}

  #     - name: Comment PR
  #       continue-on-error: true
  #       uses: thollander/actions-comment-pull-request@v2
  #       if: ${{ steps.changelog.outputs.skipped == 'false' }}
  #       with:
  #         message: |
  #           # Current changelog
  #           ${{ steps.changelog.outputs.clean_changelog }}
  #         comment_tag: current-changelog
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # # For every commit and pull request
  # validate-api:
  #   name: Code validation (Commits and PR)
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.m2
  #         key: ${{ runner.os }}-maven-test-${{ hashFiles('oracle-api/pom.xml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-maven-test-

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: "17"
  #         distribution: "temurin"

  #     - name: Code Validation
  #       run: mvn --no-transfer-progress validate --file oracle-api/pom.xml

  #     - name: Code Compilation
  #       run: mvn --no-transfer-progress clean compile --file oracle-api/pom.xml

  #     - name: Checkstyle
  #       run: mvn --no-transfer-progress checkstyle:checkstyle -Dcheckstyle.skip=false --file oracle-api/pom.xml

  #     - name: Archive Checkstyle
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: checkstyle
  #         path: target/site/checkstyle.html
  #         retention-days: 5

  # tests-api:
  #   name: Code tests (Commits and PR)
  #   runs-on: ubuntu-latest
  #   needs:
  #     - validate-api
  #   steps:
  #     - uses: actions/checkout@v3
  #       if: github.event_name == 'pull_request'
  #       with:
  #         fetch-depth: 0
  #         ref: ${{ github.event.pull_request.head.ref }}

  #     - uses: actions/checkout@v3
  #       if: github.event_name == 'push'
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.m2
  #         key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-maven-test-
  #     - name: Cache SonarCloud packages
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.sonar/cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: ${{ runner.os }}-sonar

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: "17"
  #         distribution: "temurin"

  #     - name: Unit Tests
  #       run: mvn --no-transfer-progress test --file pom.xml

  #     - name: Integration Tests
  #       run: mvn --no-transfer-progress verify -P integration-test --file pom.xml

  #     - name: Code Coverage
  #       run: mvn --no-transfer-progress clean verify -P all-tests --file pom.xml

  #     - name: Generate JaCoCo Badge
  #       uses: cicirello/jacoco-badge-generator@v2
  #       id: jacoco
  #       with:
  #         generate-branches-badge: true
  #         jacoco-csv-file: target/coverage-reports/merged-test-report/jacoco.csv

  #     - name: Log coverage percentage
  #       run: |
  #         echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
  #         echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
  #     - name: Commit the badge (if it changed)
  #       uses: EndBug/add-and-commit@v9
  #       with:
  #         author_name: Ci Bot
  #         author_email: cibot@users.noreply.github.com
  #         message: "ci: autogenerated JaCoCo coverage badge"
  #         add: "*.svg"

  #     - name: Upload JaCoCo coverage report
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: jacoco-report
  #         path: target/coverage-reports/merged-test-report/

  #     - name: QualityGate
  #       run: mvn --no-transfer-progress clean verify package -P all-tests sonar:sonar -Dsonar.projectKey=bcgov_nr-backend-starting-api -Dsonar.coverage.jacoco.xmlReportPaths=target/coverage-reports/merged-test-report/jacoco.xml --file pom.xml
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # tests-backend:
  #   name: Newman API tests runner
  #   needs:
  #     - deploys
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Install Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16

  #     - name: Install newman
  #       run: |
  #         npm install -g newman
  #         npm install -g newman-reporter-htmlextra
  #     - name: Make Directory for Test Results
  #       run: mkdir -p testArtifacts

  #     - name: Run Postman Collection
  #       run: |
  #         newman run test/postman/starting-api.postman_collection.json -e test/postman/starting-api.postman_environment.json \
  #           --env-var "apiAddr=nr-spar-backend-${{ github.event.number }}-spar-api.apps.silver.devops.gov.bc.ca" \
  #           --env-var "releaseVer=snapshot-${{ github.event.number }}" \
  #           --env-var "authServer=${{ vars.KEYCLOAK_SERVER_REALM }}" \
  #           --env-var "authClient=${{ vars.KC_SERVICE_ACCOUNT_NAME }}" \
  #           --env-var "authClient=${{ secrets.KC_SERVICE_ACCOUNT_PASS }}" \
  #           --suppress-exit-code -r htmlextra --reporter-htmlextra-export testArtifacts/api-tests-report.html
  #     - name: Output the results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: API test report
  #         path: testArtifacts

  # # tests-frontend:
  # #   name: E2E Smoke on Chrome
  # #   env:
  # #     DOMAIN: apps.silver.devops.gov.bc.ca
  # #     PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
  # #   needs:
  # #     - deploys
  # #   continue-on-error: true
  # #   runs-on: ubuntu-22.04
  # #   timeout-minutes: 10
  # #   steps:
  # #     - name: Checkout
  # #       uses: actions/checkout@v3

  # #     - name: Setup Node
  # #       uses: actions/setup-node@v3
  # #       with:
  # #         node-version: "16"
  # #         cache: "yarn"
  # #         cache-dependency-path: frontend/yarn.lock

  # #     - name: Install dependencies
  # #       run: yarn --prefer-offline --cwd frontend

  # #     - name: Cypress run
  # #       uses: cypress-io/github-action@v5.0.9
  # #       with:
  # #         install: false
  # #         working-directory: frontend
  # #         config: baseUrl=https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}

  # #     - name: Upload screenshots on failure
  # #       uses: actions/upload-artifact@v3
  # #       if: failure()
  # #       with:
  # #         name: cypress-screenshots
  # #         path: cypress/screenshots

  # #     - name: Upload videos
  # #       uses: actions/upload-artifact@v3
  # #       with:
  # #         name: cypress-videos
  # #         path: cypress/videos

name: Pull Request Open

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  NAME: nrbestapi

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-validation:
    name: Pull Request Label Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3

      - name: Pull request size and stability labels
        uses: actions/labeler@v4
        continue-on-error: true
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Conventional Label
        uses: bcoe/conventional-release-labels@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignored_types: '["chore","pr"]'
          type_labels: '{"feat": "feature", "fix": "fix", "bug": "fix", "doc": "documentation", "ci": "ci", "chore": "chore", "breaking": "breaking", "BREAKING CHANGE": "breaking"}'

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ github.head_ref }}

      - name: Conventional Changelog Update
        continue-on-error: true
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ github.token }}
          output-file: 'CHANGELOG.md'
          skip-version-file: 'true'
          skip-commit: 'true'
          git-push: 'false'
          git-branch: refs/heads/${{ github.head_ref }}

      - name: Checkout pr
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Comment PR
        continue-on-error: true
        uses: thollander/actions-comment-pull-request@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          message: |
            # Current changelog

            ${{ steps.changelog.outputs.clean_changelog }}
          comment_includes: '# Current changelog'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate:
    name: Code validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Code Validation
        run: mvn --no-transfer-progress validate --file pom.xml

      - name: Code Compilation
        run: mvn --no-transfer-progress clean compile --file pom.xml

      - name: Checkstyle
        run: mvn --no-transfer-progress checkstyle:checkstyle -Dcheckstyle.skip=false --file pom.xml

      - name: Archive Checkstyle
        uses: actions/upload-artifact@v2
        with:
          name: checkstyle
          path: target/site/checkstyle.html
          retention-days: 5

  sonarcloud:
    name: Test Code and Static Analysis
    runs-on: ubuntu-latest
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Unit Tests
        run: mvn --no-transfer-progress test --file pom.xml

      - name: Integration Tests
        run: mvn --no-transfer-progress verify -P integration-test --file pom.xml

      - name: Code Coverage
        run: mvn --no-transfer-progress clean verify -P all-tests --file pom.xml

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        id: jacoco
        with:
          generate-branches-badge: true
          jacoco-csv-file: target/coverage-reports/merged-test-report/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'CI Bot'
            git config --global user.email 'cibot@users.noreply.github.com'
            git add -A
            git commit -m "ci: autogenerated JaCoCo coverage badge"
            git push
          fi

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/coverage-reports/merged-test-report/

      - name: Qualitygate
        run: mvn --no-transfer-progress clean verify package -P all-tests sonar:sonar -Dsonar.projectKey=bcgov_nr-backend-starting-api -Dsonar.coverage.jacoco.xmlReportPaths=target/coverage-reports/merged-test-report/jacoco.xml --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    name: Security checks
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          debug: true
          languages: java

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Code Compilation
        run: mvn --no-transfer-progress clean compile --file pom.xml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

  build-service-api:
    name: Service API Image Build
    env:
      COMPONENT: service-api
      ZONE: ${{ github.event.number }}
    runs-on: ubuntu-latest
    needs:
      - security
      - sonarcloud
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository and Setup JDK 17

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn --no-transfer-progress --update-snapshots package

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.ZONE }}-${{ env.COMPONENT }}

      - name: Clear any previous OpenShift image
        run: |
          # Login to OpenShift and select project
          oc login --token=${{ secrets.OC_TOKEN }} --server=${{ secrets.OC_SERVER }}
          oc project ${{ secrets.OC_NAMESPACE }}

          # Clean previous image
          oc delete is ${{ env.NAME }}-${{ env.ZONE }}-${{ env.COMPONENT }} || true

  deploy-dev:
    name: DEV Deployment
    needs:
      - security
      - sonarcloud
      - build-service-api
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      ZONE: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        run: |
          # Login to OpenShift and select project
          oc login --token=${{ secrets.OC_TOKEN }} --server=${{ secrets.OC_SERVER }}
          oc project ${{ secrets.OC_NAMESPACE }}

          # Database uses a default build
          oc process -f .github/openshift/deploy.database.yml -p ZONE=${{ env.ZONE }} | oc apply -f -

          # Clean previous image, if rebuilding
          if [ ${{ needs.build-service-api.outputs.build == 'true' }} ]
          then
            # Clear stale images for import/replacement
            oc delete is ${{ env.NAME }}-${{ env.ZONE }}-service-api || \
              echo "No previously imported images have been found"
          fi

          # Process and apply template
          oc process -f .github/openshift/deploy.backend.yml -p ZONE=${{ env.ZONE }} \
            -p PROMOTE=${{ github.repository }}:${{ env.ZONE }}-service-api | oc apply -f -

          # Follow any active rollouts (see deploymentconfigs)
          oc rollout status dc/${{ env.NAME }}-${{ env.ZONE }}-database -w
          oc rollout status dc/${{ env.NAME }}-${{ env.ZONE }}-service-api -w
      - name: DEV Deployment update
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allow-repeats: false
          message: |
            DEV deployments have completed successfully!
            Service API: [https://${{ env.NAME }}-${{ github.event.number }}-service-api.apps.silver.devops.gov.bc.ca/]()

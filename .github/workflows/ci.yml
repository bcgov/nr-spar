name: CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Code validation
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Code Validation
        run: mvn --no-transfer-progress validate --file backend/pom.xml

      - name: Code Compilation
        run: mvn --no-transfer-progress clean compile --file backend/pom.xml

      - name: Checkstyle
        run: mvn --no-transfer-progress checkstyle:checkstyle -Dcheckstyle.skip=false --file backend/pom.xml

      - name: Archive Checkstyle
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle
          path: backend/target/site/checkstyle.html
          retention-days: 5

  tests:
    name: Run tests
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Unit Tests
        run: mvn --no-transfer-progress test --file backend/pom.xml

      - name: Integration Tests
        run: mvn --no-transfer-progress verify -P integration-test --file backend/pom.xml

      - name: Code Coverage
        run: mvn --no-transfer-progress clean verify -P all-tests --file backend/pom.xml

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        id: jacoco
        with:
          generate-branches-badge: true
          jacoco-csv-file: backend/target/coverage-reports/merged-test-report/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit the badge (if it changed)
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Ci Bot
          author_email: cibot@users.noreply.github.com
          message: "ci: autogenerated JaCoCo coverage badge"
          add: "*.svg"

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: backend/target/coverage-reports/merged-test-report/

      - name: QualityGate
        run: mvn --no-transfer-progress clean verify package -P all-tests sonar:sonar -Dsonar.projectKey=bcgov_nr-spar_backend -Dsonar.coverage.jacoco.xmlReportPaths=target/coverage-reports/merged-test-report/jacoco.xml --file backend/pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_BACKEND }}

  frontend-tests:
    name: Lint and Unit Tests
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-test-and-analyse@v0.0.1
        with:
          commands: |
            yarn --cwd frontend --prefer-offline
            yarn --cwd frontend run lint
            yarn --cwd frontend build
            yarn --cwd frontend test -u --coverage
          dir: frontend
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.cobertura.reportPaths=coverage/cobertura-coverage.xml
            -Dsonar.projectKey=bcgov_nr-spar_frontend
            -Dsonar.sources=src/
            -Dsonar.exclusions=src/**/__test__/**/*
            -Dsonar.test.inclusions=src/**/__test__/**/*
          sonar_project_token: ${{ secrets.SONAR_FRONTEND }}

  backend-security:
    name: Security checks
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
    needs:
      - tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          debug: true
          languages: java

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Code Compilation
        run: mvn --no-transfer-progress clean compile --file backend/pom.xml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # For every commit and pull request
  validate-api:
    name: Code validation (Commits and PR)
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('oracle-api/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Code Validation
        run: mvn --no-transfer-progress validate --file oracle-api/pom.xml

      - name: Code Compilation
        run: mvn --no-transfer-progress clean compile --file oracle-api/pom.xml

      - name: Checkstyle
        run: mvn --no-transfer-progress checkstyle:checkstyle -Dcheckstyle.skip=false --file oracle-api/pom.xml

      - name: Archive Checkstyle
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle
          path: target/site/checkstyle.html
          retention-days: 5

  tests-api:
    name: Code tests (Commits and PR)
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-latest
    needs:
      - validate-api
    steps:
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Unit Tests
        run: mvn --no-transfer-progress test --file oracle-api/pom.xml

      - name: Integration Tests
        run: mvn --no-transfer-progress verify -P integration-test --file oracle-api/pom.xml

      - name: Code Coverage
        run: mvn --no-transfer-progress clean verify -P all-tests --file oracle-api/pom.xml

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        id: jacoco
        with:
          generate-branches-badge: true
          jacoco-csv-file: oracle-api/target/coverage-reports/merged-test-report/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      - name: Commit the badge (if it changed)
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Ci Bot
          author_email: cibot@users.noreply.github.com
          message: "ci: autogenerated JaCoCo coverage badge"
          add: "*.svg"

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/coverage-reports/merged-test-report/

      - name: QualityGate
        run: mvn --no-transfer-progress clean verify package -P all-tests sonar:sonar -Dsonar.projectKey=bcgov_nr-backend-starting-api -Dsonar.coverage.jacoco.xmlReportPaths=target/coverage-reports/merged-test-report/jacoco.xml --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_ORACLE_API }}

  pr-validation:
    name: Label Validation (Only PR)
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3

      - name: Pull request size and stability labels
        uses: actions/labeler@v4
        continue-on-error: true
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Conventional Label
        uses: bcoe/conventional-release-labels@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignored_types: '["chore","pr"]'
          type_labels: '{"feat": "feature", "fix": "fix", "bug": "fix", "doc": "documentation", "ci": "ci", "chore": "chore", "breaking": "breaking", "BREAKING CHANGE": "breaking"}'

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ github.head_ref }}

      - name: Conventional Changelog Update
        continue-on-error: true
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ github.token }}
          output-file: "CHANGELOG.md"
          skip-version-file: "true"
          skip-commit: "true"
          git-push: "false"
          git-branch: refs/heads/${{ github.head_ref }}

      - name: Checkout pr
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Comment PR
        continue-on-error: true
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          message: |
            # Current changelog
            ${{ steps.changelog.outputs.clean_changelog }}
          comment_tag: current-changelog
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests-java-docker:
    name: Java Docker tests
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        dir: [backend]
        include:
          - dir: backend
            token: SONAR_BACKEND
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run Docker commands
        run: |
          docker build -t ${{ matrix.dir }} --file ./${{ matrix.dir }}/Dockerfile.tests ./${{ matrix.dir }}
          docker run --rm --name ${{ matrix.dir }} ${{ matrix.dir }}

  tests-java:
    name: Java CI
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        dir: [oracle-api]
        include:
          - dir: oracle-api
            token: SONAR_ORACLE_API
    steps:
      - uses: actions/checkout@v3
      - uses: bcgov-nr/action-test-and-analyse-java@v0.1.0
        with:
          commands: mvn --no-transfer-progress clean compile verify package checkstyle:checkstyle -P all-tests
          dir: ${{ matrix.dir }}
          java-cache: maven
          java-distribution: temurin
          java-version: "17"
          sonar_args:
            -Dsonar.organization=bcgov-sonarcloud -Dsonar.projectKey=nr-spar_${{ matrix.dir }}
            -Dsonar.coverage.jacoco.xmlReportPaths=target/coverage-reports/merged-test-report/jacoco.xml
            -Dsonar.exclusions=**/coverage/**
          sonar_project_token: ${{ secrets[matrix.token] }}

  tests-javascript:
    name: JavaScript CI
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-test-and-analyse@v0.0.1
        with:
          commands: |
            yarn --cwd frontend --prefer-offline
            yarn --cwd frontend run lint
            yarn --cwd frontend build
            yarn --cwd frontend test -u --coverage
          dir: frontend
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.cobertura.reportPaths=coverage/cobertura-coverage.xml
            -Dsonar.projectKey=nr-spar_frontend
            -Dsonar.sources=src/
            -Dsonar.exclusions=src/**/__test__/**/*
            -Dsonar.test.inclusions=src/**/__test__/**/*
          sonar_project_token: ${{ secrets.SONAR_FRONTEND }}

  # https://github.com/marketplace/actions/aqua-security-trivy
  trivy:
    name: Security Scan
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.10.0
        with:
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          scan-type: "fs"
          scanners: "vuln,secret,config"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

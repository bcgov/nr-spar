name: PR

on:
  pull_request:

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  init:
    name: Initialize
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: PR Greeting
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        uses: bcgov-nr/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---
            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [Backend](https://${{ env.PREFIX }}-backend.${{ env.DOMAIN }}/)
            [Frontend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}/)
            [Oracle-API](https://${{ env.PREFIX }}-oracle-api.${{ env.DOMAIN }}/)

            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

      - name: OpenShift Init
        uses: bcgov-nr/action-deployer-openshift@v1.0.4
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: false
          parameters:
            -p ZONE=${{ github.event.number }}
            -p NAME=${{ github.event.repository.name }}
            -p ORACLE_DB_USER=${{ secrets.DB_USER }}
            -p ORACLE_DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            -p FORESTCLIENTAPI_KEY='${{ secrets.FORESTCLIENTAPI_KEY }}'

  cloud-native-builds:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        package: [backend]
    name: Cloud Native Builds (${{ matrix.package }})
    runs-on: ubuntu-22.04
    env:
      COMPONENT: ${{ matrix.package }}
      ZONE: ${{ github.event.number }}
      NAME: ghcr.io/${{ github.repository }}/${{ matrix.package }}:${{ github.event.number }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: "22.3.0"
          java-version: "17"
          components: "native-image"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Native Image
        run: |
          cd ${{ matrix.package }}
          chmod +x ./mvnw
          ./mvnw -Pnative clean spring-boot:build-image \
            -Dspring-boot.build-image.imageName="${{ env.NAME }}" \
            -Doci.revision=${{ github.event.number }} --quiet
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pushing
        run: docker push ${{ env.NAME }}

  builds:
    name: Builds
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [database, frontend, oracle-api]
        include:
          - package: database
            triggers: ('database/')
          - package: frontend
            triggers: ('frontend/')
          - package: oracle-api
            triggers: ('oracle-api/')
    steps:
      - uses: actions/checkout@v3
      - uses: bcgov-nr/action-builder-ghcr@v1.1.1
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ${{ matrix.triggers }}

  deploys:
    name: Deploys
    needs:
      - cloud-native-builds
      - builds
      - init
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [database, backend, frontend, oracle-api]
        include:
          - name: database
            file: database/openshift.deploy.yml
            parameters: -p DB_PVC_SIZE=128Mi
            overwrite: false
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            verification_path: "actuator/health"
            parameters:
              -p MIN_REPLICAS=1
              -p MAX_REPLICAS=1
              -p BUILD=snapshot-${{ github.event.number }}
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p REACT_APP_SPAR_BUILD_VERSION=snapshot-${{ github.event.number }}
              -p REACT_APP_SERVER_URL=https://nr-spar-${{ github.event.number }}-backend.apps.silver.devops.gov.bc.ca
              -p REACT_APP_ORACLE_SERVER_URL=https://nr-spar-${{ github.event.number }}-oracle-api.apps.silver.devops.gov.bc.ca
              -p REACT_APP_NRSPARWEBAPP_VERSION=dev
              -p REACT_APP_KC_URL=https://test.loginproxy.gov.bc.ca/auth
              -p REACT_APP_KC_REALM=standard
              -p REACT_APP_KC_CLIENT_ID=seed-planning-test-4296
              -p MIN_REPLICAS=1
              -p MAX_REPLICAS=1
          - name: oracle-api
            file: oracle-api/openshift.deploy.yml
            overwrite: true
            verification_path: "actuator/health"
            parameters:
              -p NR_SPAR_ORACLE_API_VERSION=snapshot-${{ github.event.number }}
              -p MIN_REPLICAS=1
              -p MAX_REPLICAS=1
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.4
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          verification_path: ${{ matrix.verification_path}}
          parameters:
            -p ZONE=${{ github.event.number }}
            -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:${{ github.event.number }}${{ matrix.parameters }}

  # tests-api:
  #   name: API Tests
  #   needs:
  #     - deploys
  #   env:
  #     TARGET: ${{ github.event.repository.name }}-${{ github.event.number }}-oracle-api.apps.silver.devops.gov.bc.ca
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #     - run: |
  #         # Install newman
  #         npm install -g newman
  #         npm install -g newman-reporter-htmlextra
  #         mkdir -p testArtifacts

  #     - run: |
  #         # Run Postman Collection
  #         newman run oracle-api/test/postman/oracle-api.postman_collection.json \
  #           -e oracle-api/test/postman/oracle-api.postman_environment.json \
  #           --env-var "apiAddr=${{ env.TARGET }}" \
  #           --env-var "releaseVer=snapshot-${{ github.event.number }}" \
  #           --env-var "authServer=${{ secrets.KEYCLOAK_SERVER_REALM }}" \
  #           --env-var "authClient=${{ secrets.KC_SERVICE_ACCOUNT_NAME }}" \
  #           --env-var "authClient=${{ secrets.KC_SERVICE_ACCOUNT_PASS }}"

  # tests-backend:
  #   name: Backend Tests
  #   needs:
  #     - deploys
  #   env:
  #     TARGET: ${{ github.event.repository.name }}-${{ github.event.number }}-backend.apps.silver.devops.gov.bc.ca
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #     - run: |
  #         # Install newman
  #         npm install -g newman
  #         npm install -g newman-reporter-htmlextra
  #         mkdir -p testArtifacts

  #     - run: |
  #         # Run Postman Collection
  #         newman run backend/test/postman/starting-api.postman_collection.json \
  #           -e backend/test/postman/starting-api.postman_environment.json \
  #           --env-var "apiAddr=${{ env.TARGET }}" \
  #           --env-var "releaseVer=snapshot-${{ github.event.number }}" \
  #           --env-var "authServer=${{ vars.KEYCLOAK_SERVER_REALM }}" \
  #           --env-var "authClient=${{ vars.KC_SERVICE_ACCOUNT_NAME }}" \
  #           --env-var "authClient=${{ secrets.KC_SERVICE_ACCOUNT_PASS }}"

  # tests-frontend:
  #   name: Frontend Tests
  #   env:
  #     TARGET: ${{ github.event.repository.name }}-${{ github.event.number }}-backend.apps.silver.devops.gov.bc.ca
  #   needs:
  #     - deploys
  #   continue-on-error: true
  #   runs-on: ubuntu-22.04
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "16"
  #         cache: "yarn"
  #         cache-dependency-path: frontend/yarn.lock
  #     - name: Install dependencies
  #       run: yarn --prefer-offline --cwd frontend

  #     - name: Cypress run
  #       uses: cypress-io/github-action@v5
  #       with:
  #         config: baseUrl=https://${{ env.TARGET }}
  #         install: false
  #         working-directory: frontend
